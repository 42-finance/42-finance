name: Deploy - API - Production

env:
  EB_PACKAGE_S3_BUCKET_NAME: '42finance-api'
  EB_APPLICATION_NAME: 'finance-api'
  EB_ENVIRONMENT_NAME: 'finance-api'
  DEPLOY_PACKAGE_NAME: 'finance-api-${{ github.sha }}.zip'
  VERSION_NAME: 'Ver_${{ github.sha }}'
  AWS_REGION_NAME: 'ca-central-1'

on:
  workflow_dispatch:

jobs:
  deploy-api:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Load the node_modules folder from cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            **/node_modules
            **/.eslintcache
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Create zip deployment package
        run: |
          yarn workspace api build
          cd apps/api/dist
          zip -r ../../../${{ env.DEPLOY_PACKAGE_NAME }} .

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION_NAME }}

      - name: Copy deployment package to S3
        run: |
          aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ env.EB_PACKAGE_S3_BUCKET_NAME }}

      - name: Create new EB application version
        run: |
          aws elasticbeanstalk create-application-version \
          --application-name ${{ env.EB_APPLICATION_NAME }} \
          --source-bundle S3Bucket="${{ env.EB_PACKAGE_S3_BUCKET_NAME }}",S3Key="${{ env.DEPLOY_PACKAGE_NAME }}" \
          --version-label "${{ env.VERSION_NAME }}" \
          --description "${{ github.event.head_commit.message }}"

      - name: Deploy our new Application Version
        run: |
          aws elasticbeanstalk update-environment \
          --environment-name ${{ env.EB_ENVIRONMENT_NAME }} \
          --version-label "${{ env.VERSION_NAME }}"
