import { MigrationInterface, QueryRunner } from "typeorm";

export class InitialSchema1712169901539 implements MigrationInterface {
    name = 'InitialSchema1712169901539'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TYPE "public"."group_type_enum" AS ENUM('income', 'expense', 'transfer')`);
        await queryRunner.query(`CREATE TYPE "public"."group_budgettype_enum" AS ENUM('category', 'group')`);
        await queryRunner.query(`CREATE TABLE "group" ("createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "deletedAt" TIMESTAMP, "id" SERIAL NOT NULL, "name" character varying NOT NULL, "systemName" character varying, "type" "public"."group_type_enum" NOT NULL, "icon" character varying NOT NULL, "hidden" boolean NOT NULL DEFAULT false, "default" boolean NOT NULL DEFAULT false, "budgetType" "public"."group_budgettype_enum" NOT NULL DEFAULT 'category', "hideFromBudget" boolean NOT NULL DEFAULT false, "rolloverBudget" boolean NOT NULL DEFAULT false, "householdId" integer NOT NULL, CONSTRAINT "PK_256aa0fda9b1de1a73ee0b7106b" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_43e297518e85693a04ae87a9eb" ON "group" ("householdId") `);
        await queryRunner.query(`CREATE TYPE "public"."rule_merchantvaluefilter_enum" AS ENUM('contains', 'matches')`);
        await queryRunner.query(`CREATE TYPE "public"."rule_amounttype_enum" AS ENUM('income', 'expense', 'transfer')`);
        await queryRunner.query(`CREATE TYPE "public"."rule_amountfiltertype_enum" AS ENUM('allAmounts', 'lessThan', 'equal', 'greaterThan', 'between')`);
        await queryRunner.query(`CREATE TABLE "rule" ("id" SERIAL NOT NULL, "merchantValueFilter" "public"."rule_merchantvaluefilter_enum", "merchantName" character varying, "merchantOriginalStatement" character varying, "amountType" "public"."rule_amounttype_enum", "amountFilterType" "public"."rule_amountfiltertype_enum", "amountValue" double precision, "amountValue2" double precision, "categoryId" integer, "accountId" character varying, "newMerchantName" character varying, "newCategoryId" integer, "hideTransaction" boolean, "needsReview" boolean, "householdId" integer NOT NULL, CONSTRAINT "PK_a5577f464213af7ffbe866e3cb5" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_99bd337e99ad6ff5f9cb51af4e" ON "rule" ("categoryId") `);
        await queryRunner.query(`CREATE INDEX "IDX_a73b5a52143f0b9f49d946684e" ON "rule" ("accountId") `);
        await queryRunner.query(`CREATE INDEX "IDX_b17efbef54d38a5636a17480a3" ON "rule" ("newCategoryId") `);
        await queryRunner.query(`CREATE INDEX "IDX_61cba5696f287a5cc39748be86" ON "rule" ("householdId") `);
        await queryRunner.query(`CREATE TABLE "merchant" ("createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "deletedAt" TIMESTAMP, "id" SERIAL NOT NULL, "name" character varying NOT NULL, "systemName" character varying NOT NULL, "icon" character varying, "householdId" integer NOT NULL, CONSTRAINT "PK_9a3850e0537d869734fc9bff5d6" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_8b9d2a3ee942082d8230f4d1b9" ON "merchant" ("householdId") `);
        await queryRunner.query(`CREATE TYPE "public"."transaction_currencycode_enum" AS ENUM('AED', 'AFN', 'ALL', 'AMD', 'ANG', 'AOA', 'ARS', 'AUD', 'AWG', 'AZN', 'BAM', 'BBD', 'BDT', 'BGN', 'BHD', 'BIF', 'BMD', 'BND', 'BOB', 'BRL', 'BSD', 'BTN', 'BWP', 'BYN', 'BZD', 'CAD', 'CDF', 'CHF', 'CLP', 'CNY', 'COP', 'CRC', 'CUP', 'CVE', 'CZK', 'DJF', 'DKK', 'DOP', 'DZD', 'EGP', 'ERN', 'ETB', 'EUR', 'FJD', 'FKP', 'FOK', 'GBP', 'GEL', 'GGP', 'GHS', 'GIP', 'GMD', 'GNF', 'GTQ', 'GYD', 'HKD', 'HNL', 'HRK', 'HTG', 'HUF', 'IDR', 'ILS', 'IMP', 'INR', 'IQD', 'IRR', 'ISK', 'JEP', 'JMD', 'JOD', 'JPY', 'KES', 'KGS', 'KHR', 'KID', 'KMF', 'KRW', 'KWD', 'KYD', 'KZT', 'LAK', 'LBP', 'LKR', 'LRD', 'LSL', 'LYD', 'MAD', 'MDL', 'MGA', 'MKD', 'MMK', 'MNT', 'MOP', 'MRU', 'MUR', 'MVR', 'MWK', 'MXN', 'MYR', 'MZN', 'NAD', 'NGN', 'NIO', 'NOK', 'NPR', 'NZD', 'OMR', 'PAB', 'PEN', 'PGK', 'PHP', 'PKR', 'PLN', 'PYG', 'QAR', 'RON', 'RSD', 'RUB', 'RWF', 'SAR', 'SBD', 'SCR', 'SDG', 'SEK', 'SGD', 'SHP', 'SLE', 'SLL', 'SOS', 'SRD', 'SSP', 'STN', 'SYP', 'SZL', 'THB', 'TJS', 'TMT', 'TND', 'TOP', 'TRY', 'TTD', 'TVD', 'TWD', 'TZS', 'UAH', 'UGX', 'USD', 'UYU', 'UZS', 'VES', 'VND', 'VUV', 'WST', 'XAF', 'XCD', 'XDR', 'XOF', 'XPF', 'YER', 'ZAR', 'ZMW', 'ZWL')`);
        await queryRunner.query(`CREATE TYPE "public"."transaction_type_enum" AS ENUM('plaid', 'rotessa', 'manual', 'crypto')`);
        await queryRunner.query(`CREATE TABLE "transaction" ("createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "deletedAt" TIMESTAMP, "id" character varying NOT NULL, "name" character varying NOT NULL, "date" TIMESTAMP NOT NULL, "authorizedDate" TIMESTAMP, "amount" double precision NOT NULL, "currencyCode" "public"."transaction_currencycode_enum" NOT NULL, "pending" boolean NOT NULL, "type" "public"."transaction_type_enum" NOT NULL, "needsReview" boolean NOT NULL, "hidden" boolean NOT NULL, "accountId" character varying NOT NULL, "categoryId" integer NOT NULL, "merchantId" integer NOT NULL, "householdId" integer NOT NULL, "split" boolean NOT NULL DEFAULT false, "splitTransactionId" character varying, CONSTRAINT "PK_89eadb93a89810556e1cbcd6ab9" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_3d6e89b14baa44a71870450d14" ON "transaction" ("accountId") `);
        await queryRunner.query(`CREATE INDEX "IDX_d3951864751c5812e70d033978" ON "transaction" ("categoryId") `);
        await queryRunner.query(`CREATE INDEX "IDX_3a4f348e34b2149ee21a7d5f93" ON "transaction" ("merchantId") `);
        await queryRunner.query(`CREATE INDEX "IDX_96fe41b838f6cf4bb56f57136e" ON "transaction" ("householdId") `);
        await queryRunner.query(`CREATE INDEX "IDX_a21435e3ae071efb4676708395" ON "transaction" ("splitTransactionId") `);
        await queryRunner.query(`CREATE TABLE "category" ("id" SERIAL NOT NULL, "name" character varying NOT NULL, "systemName" character varying, "icon" character varying NOT NULL, "hidden" boolean NOT NULL DEFAULT false, "default" boolean NOT NULL DEFAULT false, "hideFromBudget" boolean NOT NULL DEFAULT false, "rolloverBudget" boolean NOT NULL DEFAULT false, "groupId" integer NOT NULL, "householdId" integer NOT NULL, CONSTRAINT "PK_9c4e4a89e3674fc9f382d733f03" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_8f10a7ed9195884100d46c2640" ON "category" ("groupId") `);
        await queryRunner.query(`CREATE INDEX "IDX_09974cf92352bfe4034b0b29fb" ON "category" ("householdId") `);
        await queryRunner.query(`CREATE TABLE "budget" ("createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "deletedAt" TIMESTAMP, "id" SERIAL NOT NULL, "amount" integer NOT NULL, "categoryId" integer NOT NULL, "householdId" integer NOT NULL, CONSTRAINT "PK_9af87bcfd2de21bd9630dddaa0e" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_4aeadf37446801c8f4d2d26441" ON "budget" ("categoryId") `);
        await queryRunner.query(`CREATE INDEX "IDX_69506b7cdd646f251b5b12faad" ON "budget" ("householdId") `);
        await queryRunner.query(`CREATE TABLE "connection" ("createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "deletedAt" TIMESTAMP, "id" character varying NOT NULL, "institutionId" character varying NOT NULL, "institutionName" character varying NOT NULL, "institutionLogo" character varying, "accessToken" character varying NOT NULL, "transactionsCursor" character varying, "needsTokenRefresh" boolean NOT NULL DEFAULT false, "householdId" integer NOT NULL, CONSTRAINT "connection_unique_institutionId_householdId" UNIQUE ("institutionId", "householdId"), CONSTRAINT "PK_be611ce8b8cf439091c82a334b2" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_1a2be58594d7d36b159ba9456c" ON "connection" ("householdId") `);
        await queryRunner.query(`CREATE TYPE "public"."notification_setting_type_enum" AS ENUM('accountOutOfSync', 'newTransactionsSynced')`);
        await queryRunner.query(`CREATE TABLE "notification_setting" ("type" "public"."notification_setting_type_enum" NOT NULL, "userId" integer NOT NULL, "sendPushNotification" boolean NOT NULL DEFAULT false, "sendEmail" boolean NOT NULL DEFAULT false, "minimumAmount" double precision, CONSTRAINT "PK_5080351aa0c55bf96716e88ffa7" PRIMARY KEY ("type", "userId"))`);
        await queryRunner.query(`CREATE INDEX "IDX_cc310ed04d395b841a95d374aa" ON "notification_setting" ("type") `);
        await queryRunner.query(`CREATE TABLE "notification_token" ("token" character varying NOT NULL, "userId" integer NOT NULL, CONSTRAINT "PK_0a635601f861bfc9493920e6f29" PRIMARY KEY ("token"))`);
        await queryRunner.query(`CREATE INDEX "IDX_8c1dede7ba7256bff4e6155093" ON "notification_token" ("userId") `);
        await queryRunner.query(`CREATE TYPE "public"."tenant_invitationstate_enum" AS ENUM('pending', 'accepted', 'declined')`);
        await queryRunner.query(`CREATE TABLE "tenant" ("id" SERIAL NOT NULL, "invitationState" "public"."tenant_invitationstate_enum" NOT NULL DEFAULT 'pending', "moveOutDate" TIMESTAMP, "rotessaCustomerId" bigint, "userId" integer NOT NULL, "rentalUnitId" integer NOT NULL, CONSTRAINT "PK_da8c6efd67bb301e810e56ac139" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_a6719c3ba1ea75a8f255e3e5c7" ON "tenant" ("userId") `);
        await queryRunner.query(`CREATE INDEX "IDX_1f9f599583312544ccd0844b17" ON "tenant" ("rentalUnitId") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_78c42ddd65e01b46a7377564d3" ON "tenant" ("userId", "rentalUnitId") `);
        await queryRunner.query(`CREATE TABLE "rental_unit" ("id" SERIAL NOT NULL, "name" character varying(100) NOT NULL, "rent" integer NOT NULL, "rentDueDayOfMonth" integer NOT NULL, "propertyId" integer NOT NULL, CONSTRAINT "PK_4c9c96c15843d6a0f37e87ef41d" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_c637316bcef5b615cdb715c228" ON "rental_unit" ("propertyId") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_070cbf0997b923c7b4e755f349" ON "rental_unit" ("name", "propertyId") `);
        await queryRunner.query(`CREATE TYPE "public"."invoice_type_enum" AS ENUM('rent', 'expense')`);
        await queryRunner.query(`CREATE TABLE "invoice" ("id" SERIAL NOT NULL, "amount" double precision NOT NULL, "date" TIMESTAMP NOT NULL, "type" "public"."invoice_type_enum" NOT NULL, "rentalUnitId" integer, "propertyId" integer NOT NULL, "expenseId" integer, "transactionId" character varying, CONSTRAINT "REL_f803cfe7b8417f03ac350374af" UNIQUE ("transactionId"), CONSTRAINT "PK_15d25c200d9bcd8a33f698daf18" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_7384019ee57ca030ecbe4d0104" ON "invoice" ("expenseId") `);
        await queryRunner.query(`CREATE TYPE "public"."expense_frequency_enum" AS ENUM('once', 'daily', 'weekly', 'biweekly', 'monthly')`);
        await queryRunner.query(`CREATE TABLE "expense" ("id" SERIAL NOT NULL, "name" character varying(100) NOT NULL, "description" character varying, "amount" double precision NOT NULL, "frequency" "public"."expense_frequency_enum" NOT NULL, "dateOfFirstOccurence" TIMESTAMP NOT NULL, "propertyId" integer NOT NULL, "rentalUnitId" integer, CONSTRAINT "CHK_2d1b99d15115d34b13d5a10d58" CHECK (("propertyId" IS NOT NULL AND "rentalUnitId" IS NULL) OR ("propertyId" IS NULL AND "rentalUnitId" IS NOT NULL)), CONSTRAINT "PK_edd925b450e13ea36197c9590fc" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_8b74b5464e9ce6a9291aa5108b" ON "expense" ("propertyId") `);
        await queryRunner.query(`CREATE INDEX "IDX_74147fdca19c6fe82d0ab6cf56" ON "expense" ("rentalUnitId") `);
        await queryRunner.query(`CREATE TABLE "property" ("id" SERIAL NOT NULL, "nickname" character varying(100), "address" character varying(100) NOT NULL, "city" character varying(100) NOT NULL, "territory" character varying(100) NOT NULL, "country" character varying(100) NOT NULL, "postalCode" character varying(100) NOT NULL, "landlordId" integer NOT NULL, CONSTRAINT "PK_d80743e6191258a5003d5843b4f" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_69df4ac70e2c50c9ce20455ac2" ON "property" ("landlordId") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_97e573c2cd432f722d43788d4c" ON "property" ("nickname", "landlordId") `);
        await queryRunner.query(`CREATE TABLE "user" ("createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "deletedAt" TIMESTAMP, "id" SERIAL NOT NULL, "email" character varying(100) NOT NULL, "passwordHash" character varying NOT NULL, "name" character varying(100) NOT NULL, "phone" character varying, "emailConfirmed" boolean NOT NULL DEFAULT false, "rotessaClientId" bigint, "rotessaClientVerified" boolean NOT NULL DEFAULT false, "rotessaVerificationUrl" character varying, CONSTRAINT "UQ_e12875dfb3b1d92d7d7c5377e22" UNIQUE ("email"), CONSTRAINT "PK_cace4a159ff9f2512dd42373760" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TYPE "public"."user_household_permission_enum" AS ENUM('admin', 'user')`);
        await queryRunner.query(`CREATE TABLE "user_household" ("userId" integer NOT NULL, "householdId" integer NOT NULL, "permission" "public"."user_household_permission_enum" NOT NULL, CONSTRAINT "PK_2f5c6aa3e81d010c56bf848425a" PRIMARY KEY ("userId", "householdId"))`);
        await queryRunner.query(`CREATE TABLE "household" ("createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "deletedAt" TIMESTAMP, "id" SERIAL NOT NULL, "name" character varying(100) NOT NULL, CONSTRAINT "PK_26e9111eab2b8908fefe3c645f5" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "balance_history" ("date" TIMESTAMP NOT NULL, "currentBalance" double precision NOT NULL, "availableBalance" double precision, "limit" double precision, "walletTokenBalance" double precision, "accountId" character varying NOT NULL, "householdId" integer NOT NULL, CONSTRAINT "PK_375835bb8d44aa9a7ccd067189c" PRIMARY KEY ("date", "accountId"))`);
        await queryRunner.query(`CREATE INDEX "IDX_05ccf877ccc84840021987c7e7" ON "balance_history" ("date") `);
        await queryRunner.query(`CREATE INDEX "IDX_beb616b7f9c60e5335882869c8" ON "balance_history" ("accountId") `);
        await queryRunner.query(`CREATE INDEX "IDX_e1a3b4e68e19a8a13f01c1fec9" ON "balance_history" ("householdId") `);
        await queryRunner.query(`CREATE TYPE "public"."account_type_enum" AS ENUM('asset', 'liability')`);
        await queryRunner.query(`CREATE TYPE "public"."account_subtype_enum" AS ENUM('401a', '401k', '403B', '457b', '529', 'brokerage', 'cashIsa', 'cryptoExchange', 'educationSavingsAccount', 'ebt', 'fixedAnnuity', 'gic', 'healthReimbursementArrangement', 'hsa', 'isa', 'ira', 'lif', 'lifeInsurance', 'lira', 'lrif', 'lrsp', 'nonCustodialWallet', 'nonTaxableBrokerageAccount', 'other', 'otherInsurance', 'otherAnnuity', 'prif', 'rdsp', 'resp', 'rlif', 'rrif', 'pension', 'profitSharingPlan', 'retirement', 'roth', 'roth401k', 'rrsp', 'sepIra', 'simpleIra', 'sipp', 'stockPlan', 'thriftSavingsPlan', 'tfsa', 'trust', 'ugma', 'utma', 'variableAnnuity', 'creditCard', 'paypal', 'cd', 'checking', 'savings', 'moneyMarket', 'prepaid', 'auto', 'business', 'commercial', 'construction', 'consumer', 'homeEquity', 'loan', 'mortgage', 'overdraft', 'lineOfCredit', 'student', 'cashManagement', 'keogh', 'mutualFund', 'recurring', 'rewards', 'safeDeposit', 'sarsep', 'payroll', 'vehicle')`);
        await queryRunner.query(`CREATE TYPE "public"."account_currencycode_enum" AS ENUM('AED', 'AFN', 'ALL', 'AMD', 'ANG', 'AOA', 'ARS', 'AUD', 'AWG', 'AZN', 'BAM', 'BBD', 'BDT', 'BGN', 'BHD', 'BIF', 'BMD', 'BND', 'BOB', 'BRL', 'BSD', 'BTN', 'BWP', 'BYN', 'BZD', 'CAD', 'CDF', 'CHF', 'CLP', 'CNY', 'COP', 'CRC', 'CUP', 'CVE', 'CZK', 'DJF', 'DKK', 'DOP', 'DZD', 'EGP', 'ERN', 'ETB', 'EUR', 'FJD', 'FKP', 'FOK', 'GBP', 'GEL', 'GGP', 'GHS', 'GIP', 'GMD', 'GNF', 'GTQ', 'GYD', 'HKD', 'HNL', 'HRK', 'HTG', 'HUF', 'IDR', 'ILS', 'IMP', 'INR', 'IQD', 'IRR', 'ISK', 'JEP', 'JMD', 'JOD', 'JPY', 'KES', 'KGS', 'KHR', 'KID', 'KMF', 'KRW', 'KWD', 'KYD', 'KZT', 'LAK', 'LBP', 'LKR', 'LRD', 'LSL', 'LYD', 'MAD', 'MDL', 'MGA', 'MKD', 'MMK', 'MNT', 'MOP', 'MRU', 'MUR', 'MVR', 'MWK', 'MXN', 'MYR', 'MZN', 'NAD', 'NGN', 'NIO', 'NOK', 'NPR', 'NZD', 'OMR', 'PAB', 'PEN', 'PGK', 'PHP', 'PKR', 'PLN', 'PYG', 'QAR', 'RON', 'RSD', 'RUB', 'RWF', 'SAR', 'SBD', 'SCR', 'SDG', 'SEK', 'SGD', 'SHP', 'SLE', 'SLL', 'SOS', 'SRD', 'SSP', 'STN', 'SYP', 'SZL', 'THB', 'TJS', 'TMT', 'TND', 'TOP', 'TRY', 'TTD', 'TVD', 'TWD', 'TZS', 'UAH', 'UGX', 'USD', 'UYU', 'UZS', 'VES', 'VND', 'VUV', 'WST', 'XAF', 'XCD', 'XDR', 'XOF', 'XPF', 'YER', 'ZAR', 'ZMW', 'ZWL')`);
        await queryRunner.query(`CREATE TYPE "public"."account_wallettype_enum" AS ENUM('bitcoin', 'ethereum')`);
        await queryRunner.query(`CREATE TABLE "account" ("createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "deletedAt" TIMESTAMP, "id" character varying NOT NULL, "name" character varying NOT NULL, "officialName" character varying, "mask" character varying, "type" "public"."account_type_enum" NOT NULL, "subType" "public"."account_subtype_enum" NOT NULL, "currentBalance" double precision NOT NULL, "availableBalance" double precision, "limit" double precision, "currencyCode" "public"."account_currencycode_enum" NOT NULL, "lastTransactionsUpdate" TIMESTAMP, "walletType" "public"."account_wallettype_enum", "walletAddress" character varying, "walletTokenBalance" double precision, "vehicleVin" character varying, "vehicleMileage" integer, "vehicleMake" character varying, "vehicleModel" character varying, "vehicleYear" integer, "vehicleTrim" character varying, "vehicleState" character varying, "connectionId" character varying, "householdId" integer NOT NULL, CONSTRAINT "PK_54115ee388cdb6d86bb4bf5b2ea" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_705c10f1d6036ace50b2d3a805" ON "account" ("connectionId") `);
        await queryRunner.query(`CREATE INDEX "IDX_f5c153f7925c71dab5b2f4fa34" ON "account" ("householdId") `);
        await queryRunner.query(`CREATE TABLE "email_confirmation" ("id" SERIAL NOT NULL, "code" character varying(6) NOT NULL, "codeExpiry" TIMESTAMP NOT NULL, "userId" integer NOT NULL, CONSTRAINT "REL_28d3d3fbd7503f3428b94fd18c" UNIQUE ("userId"), CONSTRAINT "PK_ff2b80a46c3992a0046b07c5456" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_28d3d3fbd7503f3428b94fd18c" ON "email_confirmation" ("userId") `);
        await queryRunner.query(`CREATE TYPE "public"."exchange_rate_currencycode_enum" AS ENUM('AED', 'AFN', 'ALL', 'AMD', 'ANG', 'AOA', 'ARS', 'AUD', 'AWG', 'AZN', 'BAM', 'BBD', 'BDT', 'BGN', 'BHD', 'BIF', 'BMD', 'BND', 'BOB', 'BRL', 'BSD', 'BTN', 'BWP', 'BYN', 'BZD', 'CAD', 'CDF', 'CHF', 'CLP', 'CNY', 'COP', 'CRC', 'CUP', 'CVE', 'CZK', 'DJF', 'DKK', 'DOP', 'DZD', 'EGP', 'ERN', 'ETB', 'EUR', 'FJD', 'FKP', 'FOK', 'GBP', 'GEL', 'GGP', 'GHS', 'GIP', 'GMD', 'GNF', 'GTQ', 'GYD', 'HKD', 'HNL', 'HRK', 'HTG', 'HUF', 'IDR', 'ILS', 'IMP', 'INR', 'IQD', 'IRR', 'ISK', 'JEP', 'JMD', 'JOD', 'JPY', 'KES', 'KGS', 'KHR', 'KID', 'KMF', 'KRW', 'KWD', 'KYD', 'KZT', 'LAK', 'LBP', 'LKR', 'LRD', 'LSL', 'LYD', 'MAD', 'MDL', 'MGA', 'MKD', 'MMK', 'MNT', 'MOP', 'MRU', 'MUR', 'MVR', 'MWK', 'MXN', 'MYR', 'MZN', 'NAD', 'NGN', 'NIO', 'NOK', 'NPR', 'NZD', 'OMR', 'PAB', 'PEN', 'PGK', 'PHP', 'PKR', 'PLN', 'PYG', 'QAR', 'RON', 'RSD', 'RUB', 'RWF', 'SAR', 'SBD', 'SCR', 'SDG', 'SEK', 'SGD', 'SHP', 'SLE', 'SLL', 'SOS', 'SRD', 'SSP', 'STN', 'SYP', 'SZL', 'THB', 'TJS', 'TMT', 'TND', 'TOP', 'TRY', 'TTD', 'TVD', 'TWD', 'TZS', 'UAH', 'UGX', 'USD', 'UYU', 'UZS', 'VES', 'VND', 'VUV', 'WST', 'XAF', 'XCD', 'XDR', 'XOF', 'XPF', 'YER', 'ZAR', 'ZMW', 'ZWL')`);
        await queryRunner.query(`CREATE TABLE "exchange_rate" ("date" TIMESTAMP NOT NULL, "currencyCode" "public"."exchange_rate_currencycode_enum" NOT NULL, "exchangeRate" double precision NOT NULL, CONSTRAINT "PK_5489c0ad40f7366597165100884" PRIMARY KEY ("date", "currencyCode"))`);
        await queryRunner.query(`CREATE TABLE "forgot_password" ("id" SERIAL NOT NULL, "code" character varying(6) NOT NULL, "codeExpiry" TIMESTAMP NOT NULL, "userId" integer NOT NULL, CONSTRAINT "REL_dba25590105b78ad1a6adfbc6a" UNIQUE ("userId"), CONSTRAINT "PK_9b1bedb8b9dd6834196533ee41b" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_dba25590105b78ad1a6adfbc6a" ON "forgot_password" ("userId") `);
        await queryRunner.query(`CREATE TYPE "public"."user_invite_permission_enum" AS ENUM('admin', 'user')`);
        await queryRunner.query(`CREATE TABLE "user_invite" ("email" character varying NOT NULL, "householdId" integer NOT NULL, "permission" "public"."user_invite_permission_enum" NOT NULL, "invitedByUserId" integer NOT NULL, CONSTRAINT "PK_c1b2fd98d74fde0f7de5596c706" PRIMARY KEY ("email", "householdId"))`);
        await queryRunner.query(`CREATE INDEX "IDX_95c8f351671e4dd1fde04be06c" ON "user_invite" ("invitedByUserId") `);
        await queryRunner.query(`ALTER TABLE "group" ADD CONSTRAINT "FK_43e297518e85693a04ae87a9eb8" FOREIGN KEY ("householdId") REFERENCES "household"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "rule" ADD CONSTRAINT "FK_99bd337e99ad6ff5f9cb51af4e2" FOREIGN KEY ("categoryId") REFERENCES "category"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "rule" ADD CONSTRAINT "FK_a73b5a52143f0b9f49d946684ed" FOREIGN KEY ("accountId") REFERENCES "account"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "rule" ADD CONSTRAINT "FK_b17efbef54d38a5636a17480a3a" FOREIGN KEY ("newCategoryId") REFERENCES "category"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "rule" ADD CONSTRAINT "FK_61cba5696f287a5cc39748be861" FOREIGN KEY ("householdId") REFERENCES "household"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "merchant" ADD CONSTRAINT "FK_8b9d2a3ee942082d8230f4d1b94" FOREIGN KEY ("householdId") REFERENCES "household"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "transaction" ADD CONSTRAINT "FK_3d6e89b14baa44a71870450d14d" FOREIGN KEY ("accountId") REFERENCES "account"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "transaction" ADD CONSTRAINT "FK_d3951864751c5812e70d033978d" FOREIGN KEY ("categoryId") REFERENCES "category"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "transaction" ADD CONSTRAINT "FK_3a4f348e34b2149ee21a7d5f93f" FOREIGN KEY ("merchantId") REFERENCES "merchant"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "transaction" ADD CONSTRAINT "FK_96fe41b838f6cf4bb56f57136e5" FOREIGN KEY ("householdId") REFERENCES "household"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "transaction" ADD CONSTRAINT "FK_a21435e3ae071efb46767083950" FOREIGN KEY ("splitTransactionId") REFERENCES "transaction"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "category" ADD CONSTRAINT "FK_8f10a7ed9195884100d46c26404" FOREIGN KEY ("groupId") REFERENCES "group"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "category" ADD CONSTRAINT "FK_09974cf92352bfe4034b0b29fb1" FOREIGN KEY ("householdId") REFERENCES "household"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "budget" ADD CONSTRAINT "FK_4aeadf37446801c8f4d2d26441b" FOREIGN KEY ("categoryId") REFERENCES "category"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "budget" ADD CONSTRAINT "FK_69506b7cdd646f251b5b12faad2" FOREIGN KEY ("householdId") REFERENCES "household"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "connection" ADD CONSTRAINT "FK_1a2be58594d7d36b159ba9456cb" FOREIGN KEY ("householdId") REFERENCES "household"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "notification_setting" ADD CONSTRAINT "FK_3480ded3271e72f04ecb8353ad1" FOREIGN KEY ("userId") REFERENCES "user"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "notification_token" ADD CONSTRAINT "FK_8c1dede7ba7256bff4e6155093c" FOREIGN KEY ("userId") REFERENCES "user"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "tenant" ADD CONSTRAINT "FK_a6719c3ba1ea75a8f255e3e5c7d" FOREIGN KEY ("userId") REFERENCES "user"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "tenant" ADD CONSTRAINT "FK_1f9f599583312544ccd0844b17f" FOREIGN KEY ("rentalUnitId") REFERENCES "rental_unit"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "rental_unit" ADD CONSTRAINT "FK_c637316bcef5b615cdb715c228c" FOREIGN KEY ("propertyId") REFERENCES "property"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "invoice" ADD CONSTRAINT "FK_a560f4e38c46b3674794c9d4507" FOREIGN KEY ("rentalUnitId") REFERENCES "rental_unit"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "invoice" ADD CONSTRAINT "FK_ca1447389040f2b35d9dda72eab" FOREIGN KEY ("propertyId") REFERENCES "property"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "invoice" ADD CONSTRAINT "FK_7384019ee57ca030ecbe4d0104c" FOREIGN KEY ("expenseId") REFERENCES "expense"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "invoice" ADD CONSTRAINT "FK_f803cfe7b8417f03ac350374af8" FOREIGN KEY ("transactionId") REFERENCES "transaction"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "expense" ADD CONSTRAINT "FK_8b74b5464e9ce6a9291aa5108bd" FOREIGN KEY ("propertyId") REFERENCES "property"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "expense" ADD CONSTRAINT "FK_74147fdca19c6fe82d0ab6cf56c" FOREIGN KEY ("rentalUnitId") REFERENCES "rental_unit"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "property" ADD CONSTRAINT "FK_69df4ac70e2c50c9ce20455ac2a" FOREIGN KEY ("landlordId") REFERENCES "user"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user_household" ADD CONSTRAINT "FK_e762ef4acca7677fce82976265a" FOREIGN KEY ("userId") REFERENCES "user"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user_household" ADD CONSTRAINT "FK_e6306ed9aa594ac55f0c96d1caa" FOREIGN KEY ("householdId") REFERENCES "household"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "balance_history" ADD CONSTRAINT "FK_beb616b7f9c60e5335882869c88" FOREIGN KEY ("accountId") REFERENCES "account"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "balance_history" ADD CONSTRAINT "FK_e1a3b4e68e19a8a13f01c1fec99" FOREIGN KEY ("householdId") REFERENCES "household"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "account" ADD CONSTRAINT "FK_705c10f1d6036ace50b2d3a805b" FOREIGN KEY ("connectionId") REFERENCES "connection"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "account" ADD CONSTRAINT "FK_f5c153f7925c71dab5b2f4fa341" FOREIGN KEY ("householdId") REFERENCES "household"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "email_confirmation" ADD CONSTRAINT "FK_28d3d3fbd7503f3428b94fd18cc" FOREIGN KEY ("userId") REFERENCES "user"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "forgot_password" ADD CONSTRAINT "FK_dba25590105b78ad1a6adfbc6ae" FOREIGN KEY ("userId") REFERENCES "user"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "user_invite" ADD CONSTRAINT "FK_95c8f351671e4dd1fde04be06c0" FOREIGN KEY ("invitedByUserId") REFERENCES "user"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "user_invite" DROP CONSTRAINT "FK_95c8f351671e4dd1fde04be06c0"`);
        await queryRunner.query(`ALTER TABLE "forgot_password" DROP CONSTRAINT "FK_dba25590105b78ad1a6adfbc6ae"`);
        await queryRunner.query(`ALTER TABLE "email_confirmation" DROP CONSTRAINT "FK_28d3d3fbd7503f3428b94fd18cc"`);
        await queryRunner.query(`ALTER TABLE "account" DROP CONSTRAINT "FK_f5c153f7925c71dab5b2f4fa341"`);
        await queryRunner.query(`ALTER TABLE "account" DROP CONSTRAINT "FK_705c10f1d6036ace50b2d3a805b"`);
        await queryRunner.query(`ALTER TABLE "balance_history" DROP CONSTRAINT "FK_e1a3b4e68e19a8a13f01c1fec99"`);
        await queryRunner.query(`ALTER TABLE "balance_history" DROP CONSTRAINT "FK_beb616b7f9c60e5335882869c88"`);
        await queryRunner.query(`ALTER TABLE "user_household" DROP CONSTRAINT "FK_e6306ed9aa594ac55f0c96d1caa"`);
        await queryRunner.query(`ALTER TABLE "user_household" DROP CONSTRAINT "FK_e762ef4acca7677fce82976265a"`);
        await queryRunner.query(`ALTER TABLE "property" DROP CONSTRAINT "FK_69df4ac70e2c50c9ce20455ac2a"`);
        await queryRunner.query(`ALTER TABLE "expense" DROP CONSTRAINT "FK_74147fdca19c6fe82d0ab6cf56c"`);
        await queryRunner.query(`ALTER TABLE "expense" DROP CONSTRAINT "FK_8b74b5464e9ce6a9291aa5108bd"`);
        await queryRunner.query(`ALTER TABLE "invoice" DROP CONSTRAINT "FK_f803cfe7b8417f03ac350374af8"`);
        await queryRunner.query(`ALTER TABLE "invoice" DROP CONSTRAINT "FK_7384019ee57ca030ecbe4d0104c"`);
        await queryRunner.query(`ALTER TABLE "invoice" DROP CONSTRAINT "FK_ca1447389040f2b35d9dda72eab"`);
        await queryRunner.query(`ALTER TABLE "invoice" DROP CONSTRAINT "FK_a560f4e38c46b3674794c9d4507"`);
        await queryRunner.query(`ALTER TABLE "rental_unit" DROP CONSTRAINT "FK_c637316bcef5b615cdb715c228c"`);
        await queryRunner.query(`ALTER TABLE "tenant" DROP CONSTRAINT "FK_1f9f599583312544ccd0844b17f"`);
        await queryRunner.query(`ALTER TABLE "tenant" DROP CONSTRAINT "FK_a6719c3ba1ea75a8f255e3e5c7d"`);
        await queryRunner.query(`ALTER TABLE "notification_token" DROP CONSTRAINT "FK_8c1dede7ba7256bff4e6155093c"`);
        await queryRunner.query(`ALTER TABLE "notification_setting" DROP CONSTRAINT "FK_3480ded3271e72f04ecb8353ad1"`);
        await queryRunner.query(`ALTER TABLE "connection" DROP CONSTRAINT "FK_1a2be58594d7d36b159ba9456cb"`);
        await queryRunner.query(`ALTER TABLE "budget" DROP CONSTRAINT "FK_69506b7cdd646f251b5b12faad2"`);
        await queryRunner.query(`ALTER TABLE "budget" DROP CONSTRAINT "FK_4aeadf37446801c8f4d2d26441b"`);
        await queryRunner.query(`ALTER TABLE "category" DROP CONSTRAINT "FK_09974cf92352bfe4034b0b29fb1"`);
        await queryRunner.query(`ALTER TABLE "category" DROP CONSTRAINT "FK_8f10a7ed9195884100d46c26404"`);
        await queryRunner.query(`ALTER TABLE "transaction" DROP CONSTRAINT "FK_a21435e3ae071efb46767083950"`);
        await queryRunner.query(`ALTER TABLE "transaction" DROP CONSTRAINT "FK_96fe41b838f6cf4bb56f57136e5"`);
        await queryRunner.query(`ALTER TABLE "transaction" DROP CONSTRAINT "FK_3a4f348e34b2149ee21a7d5f93f"`);
        await queryRunner.query(`ALTER TABLE "transaction" DROP CONSTRAINT "FK_d3951864751c5812e70d033978d"`);
        await queryRunner.query(`ALTER TABLE "transaction" DROP CONSTRAINT "FK_3d6e89b14baa44a71870450d14d"`);
        await queryRunner.query(`ALTER TABLE "merchant" DROP CONSTRAINT "FK_8b9d2a3ee942082d8230f4d1b94"`);
        await queryRunner.query(`ALTER TABLE "rule" DROP CONSTRAINT "FK_61cba5696f287a5cc39748be861"`);
        await queryRunner.query(`ALTER TABLE "rule" DROP CONSTRAINT "FK_b17efbef54d38a5636a17480a3a"`);
        await queryRunner.query(`ALTER TABLE "rule" DROP CONSTRAINT "FK_a73b5a52143f0b9f49d946684ed"`);
        await queryRunner.query(`ALTER TABLE "rule" DROP CONSTRAINT "FK_99bd337e99ad6ff5f9cb51af4e2"`);
        await queryRunner.query(`ALTER TABLE "group" DROP CONSTRAINT "FK_43e297518e85693a04ae87a9eb8"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_95c8f351671e4dd1fde04be06c"`);
        await queryRunner.query(`DROP TABLE "user_invite"`);
        await queryRunner.query(`DROP TYPE "public"."user_invite_permission_enum"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_dba25590105b78ad1a6adfbc6a"`);
        await queryRunner.query(`DROP TABLE "forgot_password"`);
        await queryRunner.query(`DROP TABLE "exchange_rate"`);
        await queryRunner.query(`DROP TYPE "public"."exchange_rate_currencycode_enum"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_28d3d3fbd7503f3428b94fd18c"`);
        await queryRunner.query(`DROP TABLE "email_confirmation"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_f5c153f7925c71dab5b2f4fa34"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_705c10f1d6036ace50b2d3a805"`);
        await queryRunner.query(`DROP TABLE "account"`);
        await queryRunner.query(`DROP TYPE "public"."account_wallettype_enum"`);
        await queryRunner.query(`DROP TYPE "public"."account_currencycode_enum"`);
        await queryRunner.query(`DROP TYPE "public"."account_subtype_enum"`);
        await queryRunner.query(`DROP TYPE "public"."account_type_enum"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_e1a3b4e68e19a8a13f01c1fec9"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_beb616b7f9c60e5335882869c8"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_05ccf877ccc84840021987c7e7"`);
        await queryRunner.query(`DROP TABLE "balance_history"`);
        await queryRunner.query(`DROP TABLE "household"`);
        await queryRunner.query(`DROP TABLE "user_household"`);
        await queryRunner.query(`DROP TYPE "public"."user_household_permission_enum"`);
        await queryRunner.query(`DROP TABLE "user"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_97e573c2cd432f722d43788d4c"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_69df4ac70e2c50c9ce20455ac2"`);
        await queryRunner.query(`DROP TABLE "property"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_74147fdca19c6fe82d0ab6cf56"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_8b74b5464e9ce6a9291aa5108b"`);
        await queryRunner.query(`DROP TABLE "expense"`);
        await queryRunner.query(`DROP TYPE "public"."expense_frequency_enum"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_7384019ee57ca030ecbe4d0104"`);
        await queryRunner.query(`DROP TABLE "invoice"`);
        await queryRunner.query(`DROP TYPE "public"."invoice_type_enum"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_070cbf0997b923c7b4e755f349"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_c637316bcef5b615cdb715c228"`);
        await queryRunner.query(`DROP TABLE "rental_unit"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_78c42ddd65e01b46a7377564d3"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_1f9f599583312544ccd0844b17"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_a6719c3ba1ea75a8f255e3e5c7"`);
        await queryRunner.query(`DROP TABLE "tenant"`);
        await queryRunner.query(`DROP TYPE "public"."tenant_invitationstate_enum"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_8c1dede7ba7256bff4e6155093"`);
        await queryRunner.query(`DROP TABLE "notification_token"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_cc310ed04d395b841a95d374aa"`);
        await queryRunner.query(`DROP TABLE "notification_setting"`);
        await queryRunner.query(`DROP TYPE "public"."notification_setting_type_enum"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_1a2be58594d7d36b159ba9456c"`);
        await queryRunner.query(`DROP TABLE "connection"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_69506b7cdd646f251b5b12faad"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_4aeadf37446801c8f4d2d26441"`);
        await queryRunner.query(`DROP TABLE "budget"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_09974cf92352bfe4034b0b29fb"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_8f10a7ed9195884100d46c2640"`);
        await queryRunner.query(`DROP TABLE "category"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_a21435e3ae071efb4676708395"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_96fe41b838f6cf4bb56f57136e"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_3a4f348e34b2149ee21a7d5f93"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_d3951864751c5812e70d033978"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_3d6e89b14baa44a71870450d14"`);
        await queryRunner.query(`DROP TABLE "transaction"`);
        await queryRunner.query(`DROP TYPE "public"."transaction_type_enum"`);
        await queryRunner.query(`DROP TYPE "public"."transaction_currencycode_enum"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_8b9d2a3ee942082d8230f4d1b9"`);
        await queryRunner.query(`DROP TABLE "merchant"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_61cba5696f287a5cc39748be86"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_b17efbef54d38a5636a17480a3"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_a73b5a52143f0b9f49d946684e"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_99bd337e99ad6ff5f9cb51af4e"`);
        await queryRunner.query(`DROP TABLE "rule"`);
        await queryRunner.query(`DROP TYPE "public"."rule_amountfiltertype_enum"`);
        await queryRunner.query(`DROP TYPE "public"."rule_amounttype_enum"`);
        await queryRunner.query(`DROP TYPE "public"."rule_merchantvaluefilter_enum"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_43e297518e85693a04ae87a9eb"`);
        await queryRunner.query(`DROP TABLE "group"`);
        await queryRunner.query(`DROP TYPE "public"."group_budgettype_enum"`);
        await queryRunner.query(`DROP TYPE "public"."group_type_enum"`);
    }

}
